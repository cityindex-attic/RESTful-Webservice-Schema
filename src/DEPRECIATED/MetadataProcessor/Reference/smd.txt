{
    "SMDVersion": "2.0", // 2.6 actually but have not fully patched dojo
    "id": "~smd_id~",
    "target": "~smd_target~",
	"$schema":"~smd_schema~",
    "description": "City Index RESTful API V1",
    "additionalParameters": true, // i will place the intercepted session header parameters in this array as soon as I have patched dojo 
    "useUriTemplates": true,
    //"responseContentType": "application/json",
	"contentType": "application/json",
    "services": {
        "createSession": {
            "target": "session",
            "description": "This is a wonderful description",
            "transport": "POST", // NOTE: this overload really complicates the client. why not have session/login and session/logout and keep things simple?
            "envelope": "JSON",
            "parameters": [{
                "name": "UserName",
                "description": "Username is case sensitive",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "demoValue": "CC735158"
            },
            {
                "name": "Password",
                "description": "Password is case sensitive",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "demoValue": "password"
            }],
            "returns": {
                "$ref": "#.properties.CreateSessionResponseDTO"
            }
        },

        "logout": {
            "description": null,
            "target": "session?_method=DELETE",
            "transport": "POST", // NOTE: this overload really complicates the client. why not have session/login and session/logout and keep things simple?
            "envelope": "JSON",
            "parameters": [{
                "name": "session",
                "description": "The session token. May be set as a service parameter or as a request header.",
                "type": "string",
                "format": "guid",
                "minLength": 36,
                "maxLength": 36,
                "demoValue": "123456789a"
            },
            {
                "name": "userName",
                "description": "Username is case sensitive. May be set as a service parameter or as a request header.",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "demoValue": "CC735158"
            }],
            "returns": {
                "$ref": "#.properties.SessionDeletionResponseDTO"
            }
        },


        "getPriceBars": {
            "description": null,
            "target": "market/{marketId}/barhistory?interval={interval}&span={span}&pricebars={priceBars}",
            "transport": "GET",
            "envelope": "JSON",
            "parameters": [{
                "name": "marketId",
                "type": "string",
                "demoValue": "71442"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
            {
                "name": "interval",
                "description": null,
                "type": "string",
                "demoValue": "MINUTE" // this is an enum?
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
            {
                "name": "span",
                "description": null,
                "type": "integer",
                "demoValue": 1
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
            {
                "name": "priceBars",
                "description": null,
                "type": "string",
                "demoValue": "15"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
			{
                "name": "session",
                "description": "The session token. May be set as a service parameter or as a request header.",
                "type": "string",
                "format": "guid",
                "minLength": 36,
                "maxLength": 36,
                "optional": true,
                "demoValue": "123456789a"
            },
            {
                "name": "userName",
                "description": "Username is case sensitive. May be set as a service parameter or as a request header.",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "optional": true,
                "demoValue": "CC735158"
            }],
            "returns": {
                "$ref": "#.properties.GetPriceBarResponseDTO"
            }
        },
        "getPriceTicks": {
            "description": null,
            "target": "market/{marketId}/tickhistory?priceticks={priceTicks}",
            "transport": "GET",
            "envelope": "JSON",
            "parameters": [{
                "name": "marketId",
                "description": null,
                "type": "string",
                "demoValue": "71442"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
            {
                "name": "priceTicks",
                "description": null,
                "type": "string",
                "demoValue": "10"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
			{
                "name": "session",
                "description": "The session token. May be set as a service parameter or as a request header.",
                "type": "string",
                "format": "guid",
                "minLength": 36,
                "maxLength": 36,
                "optional": true,
                "demoValue": "123456789a"
            },
            {
                "name": "userName",
                "description": "Username is case sensitive. May be set as a service parameter or as a request header.",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "optional": true,
                "demoValue": "CC735158"
            }],
            "returns": {
                "$ref": "#.properties.GetPriceTickResponseDTO"
            }
        },
        "listNewsHeadlines": {
            "description": null,
            "target": "news?Category={category}&MaxResults={maxResults}",
            "transport": "GET",
            "envelope": "JSON",
            "parameters": [{
                // TODO: Is this an ENUM?
                "name": "category",
                "description": null,
                "type": "string",
                "demoValue": "UK"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
            {
                "name": "maxResults",
                "description": null,
                "type": "integer",
                "demoValue": 10
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
			{
                "name": "session",
                "description": "The session token. May be set as a service parameter or as a request header.",
                "type": "string",
                "format": "guid",
                "minLength": 36,
                "maxLength": 36,
                "optional": true,
                "demoValue": "123456789a"
            },
            {
                "name": "userName",
                "description": "Username is case sensitive. May be set as a service parameter or as a request header.",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "optional": true,
                "demoValue": "CC735158"
            }],
            "returns": {
                "$ref": "#.properties.ListNewsHeadlinesResponseDTO"
            }
        },
        "getNewsDetail": {
            "description": null,
            "target": "news/{storyId}",
            "transport": "GET",
            "envelope": "JSON",
            "parameters": [{
                "name": "storyId",
                "description": null,
                "type": "string",
                "demoValue": "12654"
                // additional applicable constraints, functional or logical. remove comment to indication completion
            },
			{
                "name": "session",
                "description": "The session token. May be set as a service parameter or as a request header.",
                "type": "string",
                "format": "guid",
                "minLength": 36,
                "maxLength": 36,
                "optional": true,
                "demoValue": "123456789a"
            },
            {
                "name": "userName",
                "description": "Username is case sensitive. May be set as a service parameter or as a request header.",
                "type": "string",
                "minLength": 6,
                "maxLength": 20,
                "optional": true,
                "demoValue": "CC735158"
            }],
            "returns": {
                "$ref": "#.properties.GetNewsDetailResponseDTO"
            }
        }
    }
}