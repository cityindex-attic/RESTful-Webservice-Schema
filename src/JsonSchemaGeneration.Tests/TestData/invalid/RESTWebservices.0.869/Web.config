<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <configSections>
    <section name="tradingApi" type="TradingApi.Configuration.TradingApiConfigurationSection, RESTWebServices.Configuration" />
    <!-- this seems to be missing in the config chain on IIS7.0-->
    <sectionGroup name="system.serviceModel" type="System.ServiceModel.Configuration.ServiceModelSectionGroup, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="standardEndpoints" type="System.ServiceModel.Configuration.StandardEndpointsSection, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    </sectionGroup>
  </configSections>

  <tradingApi>
    <profiles>
      <profile name="" version="1">
        <xDomainPolicy allowAccessFrom="*" />
        <dtoAssemblies>
          <add assembly="TradingApi.CoreDTO, Version=0.869.0.0, Culture=neutral, PublicKeyToken=null" />
          <add assembly="RESTWebServicesDTO, Version=0.869.0.0, Culture=neutral, PublicKeyToken=null" />
        </dtoAssemblies>
  
        <routes>
          <add name="session" endpoint="/session" urlPattern="$" pathInfo="/" filePath="~/Session.svc" type="RESTWebServices.ILoginService, RESTWebServices, Version=1.0.0.0" />
          <add name="session_logout" endpoint="/session" urlPattern="/(\w+)$" pathInfo="/${match1}" filePath="~/Session.svc" type="RESTWebServices.ILoginService, RESTWebServices, Version=1.0.0.0" />
          <add name="market_bar" endpoint="/market" urlPattern="/([-]?\w+)/barhistory$" pathInfo="/${match1}/barhistory" filePath="~/MarketPriceHistory.svc" type="RESTWebServices.IMarketPriceHistoryService, RESTWebServices, Version=1.0.0.0" />
          <add name="market_tick" endpoint="/market" urlPattern="/([-]?\w+)/tickhistory$" pathInfo="/${match1}/tickhistory" filePath="~/MarketPriceHistory.svc" type="RESTWebServices.IMarketPriceHistoryService, RESTWebServices, Version=1.0.0.0" />
          <add name="news" endpoint="/news" urlPattern="$" pathInfo="/" filePath="~/News.svc" type="RESTWebServices.INews, RESTWebServices, Version=1.0.0.0" />
          <add name="news_detail" endpoint="/news" urlPattern="/(\w+)$" pathInfo="/${match1}" filePath="~/News.svc" type="RESTWebServices.INews, RESTWebServices, Version=1.0.0.0" />
          <add name="cfd_market" endpoint="/cfd/markets" urlPattern="$" pathInfo="/" filePath="~/CfdMarkets.svc" type="RESTWebServices.ICfdMarkets, RESTWebServices, Version=1.0.0.0" />
          <add name="spread_market" endpoint="/spread/markets" urlPattern="$" pathInfo="/" filePath="~/SpreadMarkets.svc" type="RESTWebServices.ISpreadMarkets, RESTWebServices, Version=1.0.0.0" />

          <add name="market_information" endpoint="/market" urlPattern="/([-]?\w+)/information$" pathInfo="/${match1}/information" filePath="~/MarketInformation.svc" type="RESTWebServices.IMarketInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="market_information_search" endpoint="/market/informationsearch" urlPattern="$" pathInfo="/market/informationsearch" filePath="~/MarketInformation.svc" type="RESTWebServices.IMarketInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="market_information_multiple" endpoint="/market/information" urlPattern="$" pathInfo="/market/information" filePath="~/MarketInformation.svc" type="RESTWebServices.IMarketInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="market_information_save" endpoint="/market/information/save" urlPattern="$" pathInfo="/market/information/save" filePath="~/MarketInformation.svc" type="RESTWebServices.IMarketInformationService, RESTWebServices, Version=1.0.0.0" />

          <add name="newstoplimitorder" endpoint="/order" urlPattern="/newstoplimitorder$" pathInfo="/newstoplimitorder" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="newtradeorder" endpoint="/order" urlPattern="/newtradeorder$" pathInfo="/newtradeorder" filePath="~/Trade.svc" type="RESTWebServices.ITradeService, RESTWebServices, Version=1.0.0.0" />
          <add name="cancelorder" endpoint="/order" urlPattern="/cancel$" pathInfo="/cancel" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="updatestoplimitorder" endpoint="/order" urlPattern="/updatestoplimitorder$" pathInfo="/updatestoplimitorder" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="updatetradeorder" endpoint="/order" urlPattern="/updatetradeorder$" pathInfo="/updatetradeorder" filePath="~/Trade.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="hedge" endpoint="/hedge" urlPattern="/newfxhedge$" pathInfo="/newfxhedge" filePath="~/Hedge.svc" type="RESTWebServices.IHedgeService, RESTWebServices, Version=1.0.0.0" />
          <add name="order_single" endpoint="/order" urlPattern="/(\d*)$" pathInfo="/${match1}" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="futureOption" endpoint="/futureoption" urlPattern="/newfutureoption$" pathInfo="/newfutureoption" filePath="~/FutureOption.svc" type="RESTWebServices.IFutureOptionService, RESTWebServices, Version=1.0.0.0" />

          <add name="order_active_stop_limit_orders" endpoint="/order" urlPattern="/(\d*)/activestoplimitorder$" pathInfo="/${match1}/activestoplimitorder" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="order_open_positions" endpoint="/order" urlPattern="/(\d*)/openposition$" pathInfo="/${match1}/openposition" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="open_positions" endpoint="/order/openpositions" urlPattern="$" pathInfo="/order/openpositions" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="active_stop_limit_orders" endpoint="/order/activestoplimitorders" urlPattern="$" pathInfo="/order/activestoplimitorders" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="trade_history" endpoint="/order/tradehistory" urlPattern="$" pathInfo="/order/tradehistory" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="stop_limit_order_history" endpoint="/order/stoplimitorderhistory" urlPattern="$" pathInfo="/order/stoplimitorderhistory" filePath="~/Order.svc" type="RESTWebServices.IOrderService, RESTWebServices, Version=1.0.0.0" />

          <add name="simulatenewtradeorder" endpoint="/order/simulate" urlPattern="/newtradeorder$" pathInfo="/simulatenewtradeorder" filePath="~/SimulateTrade.svc" type="RESTWebServices.ISimulateTradeService, RESTWebServices, Version=1.0.0.0" />
          <add name="simulateupdatetradeorder" endpoint="/order/simulate" urlPattern="/updatetradeorder$" pathInfo="/simulateupdatetradeorder" filePath="~/SimulateTrade.svc" type="RESTWebServices.ISimulateOrderService, RESTWebServices, Version=1.0.0.0" />

          <add name="simulatenewstoplimitorder" endpoint="/order/simulate" urlPattern="/newstoplimitorder$" pathInfo="/simulatenewstoplimitorder" filePath="~/SimulateOrder.svc" type="RESTWebServices.ISimulateOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="simulatecancelorder" endpoint="/order/simulate" urlPattern="/cancel$" pathInfo="/simulatecancel" filePath="~/SimulateOrder.svc" type="RESTWebServices.ISimulateOrderService, RESTWebServices, Version=1.0.0.0" />
          <add name="simulateupdatestoplimitorder" endpoint="/order/simulate" urlPattern="/updatestoplimitorder$" pathInfo="/simulateupdatestoplimitorder" filePath="~/SimulateOrder.svc" type="RESTWebServices.ISimulateOrderService, RESTWebServices, Version=1.0.0.0" />

          <add name="useraccount" endpoint="/useraccount" urlPattern="/(\w+)/chartingenabled$" pathInfo="/${match1}/chartingenabled" filePath="~/AccountInformation.svc" type="RESTWebServices.IAccountInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="clientandtradingaccount" endpoint="/useraccount/clientandtradingaccount" urlPattern="$" pathInfo="/useraccount/clientandtradingaccount" filePath="~/AccountInformation.svc" type="RESTWebServices.IAccountInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="useraccount_save" endpoint="/useraccount/save" urlPattern="$" pathInfo="/useraccount/save" filePath="~/AccountInformation.svc" type="RESTWebServices.IAccountInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="termsandconditions" endpoint="/useraccount/termsandconditions" urlPattern="/([-]?\w+)/termsandconditions$" pathInfo="/${match1}/termsandconditions" filePath="~/AccountInformation.svc" type="RESTWebServices.IAccountInformationService, RESTWebServices, Version=1.0.0.0" />
          <add name="message" endpoint="/message" urlPattern="/(\w+)$" pathInfo="/message/${match1}" filePath="~/Messages.svc" type="RESTWebServices.IApiMessagesService, RESTWebServices, Version=1.0.0.0" />
          <add name="message_Popup" endpoint="/message/popup" urlPattern="$" pathInfo="/message/popup$" filePath="~/Messages.svc" type="RESTWebServices.IApiMessagesService, RESTWebServices, Version=1.0.0.0" />          
          <add name="watchlistSelect" endpoint="/watchlists" urlPattern="$" pathInfo="/" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />          
          <add name="watchlistUpdateDisplayOrder" endpoint="/watchlist" urlPattern="/updatedisplayorder$" pathInfo="/updatedisplayorder" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />
          <add name="watchlistInsertItem" endpoint="/watchlist" urlPattern="/insertitem$" pathInfo="/insertitem" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />
          <add name="watchlistDeleteItem" endpoint="/watchlist" urlPattern="/deleteitem$" pathInfo="/deleteitem" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />
          <add name="watchlistDelete" endpoint="/watchlist" urlPattern="/delete$" pathInfo="/delete" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />
          <add name="watchlistSave" endpoint="/watchlist" urlPattern="/save$" pathInfo="/save" filePath="~/Watchlist.svc" type="RESTWebServices.IWatchlistService, RESTWebServices, Version=1.0.0.0" />
          
    <!-- for internal testing use -->
          <add name="readandreturn" endpoint="/readandreturn" urlPattern="$" pathInfo="/" filePath="~/ReadAndReturn.svc" type="RESTWebServices.IReadAndReturn, RESTWebServices, Version=1.0.0.0" />
          <add name="smoke_test_authenticated" endpoint="/smoketest/authenticated" urlPattern="$" pathInfo="/" filePath="~/SmokeTestAuthenticated.svc" type="RESTWebServices.IAuthenticatedSmokeTestService, RESTWebServices, Version=1.0.0.0" />
          <add name="errors" endpoint="/errors" urlPattern="$" pathInfo="/" filePath="~/Errors.svc" type="RESTWebServices.IErrors, RESTWebServices, Version=1.0.0.0" />
          <add name="smoke_test" endpoint="/smoketest" urlPattern="$" pathInfo="/" filePath="~/SmokeTest.svc" type="RESTWebServices.ISmokeTestService, RESTWebServices, Version=1.0.0.0" /> 
        </routes>
      </profile>
    </profiles>
 
  </tradingApi>
  <system.web>
    <compilation debug="true" targetFramework="4.0"/>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <httpHandlers>      
      <add verb="*" path="schema" type="MetadataProcessor.SchemaHandler" />
      <add verb="*" path="smd" type="MetadataProcessor.SmdHandler" />
      <add verb="*" path="schema.js" type="MetadataProcessor.SchemaHandler" />
      <add verb="*" path="smd.js" type="MetadataProcessor.SmdHandler" />
    </httpHandlers>
    <httpModules>
      <add name="CORS" type="RESTWebServices.XDRSupport.CORSModule"/>
      <add name="UrlMapper" type="RESTWebServices.UrlMapper" />
    </httpModules>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <add name="schema" verb="*" path="schema" type="MetadataProcessor.SchemaHandler" />
      <add name="smd" verb="*" path="smd" type="MetadataProcessor.SmdHandler" />
      <add name="schema-script" verb="*" path="schema.js" type="MetadataProcessor.SchemaHandler" />
      <add name="smd-script" verb="*" path="smd.js" type="MetadataProcessor.SmdHandler" />
    </handlers>

    <modules>
      <add name="CORS" type="RESTWebServices.XDRSupport.CORSModule"/>
      <add name="UrlMapper" type="RESTWebServices.UrlMapper" />
    </modules>
  </system.webServer>
  <system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <!-- enable WCF Performance counters (may need to adjust memory size) http://msdn.microsoft.com/en-us/library/ms735098.aspx -->
    <diagnostics performanceCounters="All" />
  <behaviors>
   <serviceBehaviors>
     <behavior  name="Throttled">
       <serviceThrottling
         maxConcurrentCalls="1000"
         maxConcurrentInstances="1000"/>
     </behavior>  
    <behavior name="">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>
  <standardEndpoints>
    <webHttpEndpoint>
      <standardEndpoint name="" contentTypeMapper="RESTWebServices.XDRSupport.JsonContentTypeMapper, RESTWebServices.XDRSupport" />
    </webHttpEndpoint>
  </standardEndpoints>
</system.serviceModel>

  <!-- Tracing settings -->
  <!--
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="traceListener" />
        </listeners>
      </source>
      <source name="System.ServiceModel"
             switchValue="Information, ActivityTracing"
             propagateActivity="true">
        <listeners>
          <add name="traceListener" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="traceListener"
           type="System.Diagnostics.XmlWriterTraceListener"
           initializeData= "c:\WcfTraces.svclog" />
    </sharedListeners>
  </system.diagnostics>
  -->

  <appSettings>
    <add key="TrianaTradingAccount" value="CX815929,DM631479,CC735158,DM753197" />
    <add key="ActiveMQHandler.PooledActiveMQConnections" value="15" />
    <add key="ThrottlingThreshold" value="500"/>
    <add key="ThrottlingWindowSeconds" value="5"/>
    <add key="ThrottlingCleanupPeriodSeconds" value="3600"/>
    <add key="ThrottlingSessionsPerUsernameThreshold" value="5"/>
    <add key="ThrottlingExcludedTradingAccount" value="CX815929,DM631479,CC735158,DM753197"/>
    <add key="ThrottlingLoggerPeriodSeconds" value="30"/>
    

    <add key="AuthenticationHandler.Type" value="Mock" />
    <add key="AuthenticationHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="AuthenticationHandler.ActiveMQ.Queue" value="AuthenticateApiCall" />
    <add key="AuthenticationHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="AuthenticationHandler.ActiveMQ.ResponseTimeout" value="5" />

    <add key="MarketSearchHandler.Type" value="Mock" />
    <add key="MarketSearchHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="MarketSearchHandler.ActiveMQ.Queue" value="MarketSearchApiCall" />
    <add key="MarketSearchHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="MarketSearchHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="PriceHistoryHandler.Type" value="Mock" />
    <add key="PriceHistoryHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="PriceHistoryHandler.ActiveMQ.Queue" value="PriceHistoryApiCall" />
    <add key="PriceHistoryHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="PriceHistoryHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="OrderHandler.Type" value="Mock" />
    <add key="OrderHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="OrderHandler.ActiveMQ.Queue" value="IPApiCall" />
    <add key="OrderHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="OrderHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="OrderQueryHandler.Type" value="Mock" />
    <add key="OrderQueryHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="OrderQueryHandler.ActiveMQ.Queue" value="OrderQueryApiCall" />
    <add key="OrderQueryHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="OrderQueryHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="TradeHandler.Type" value="Mock" />
    <add key="TradeHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="TradeHandler.ActiveMQ.Queue" value="IPApiCall" />
    <add key="TradeHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="TradeHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="HedgeHandler.Type" value="Mock" />
    <add key="HedgeHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="HedgeHandler.ActiveMQ.Queue" value="HedgeApiCall" />
    <add key="HedgeHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="HedgeHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="NewsHandler.Type" value="Mock" />
    <add key="NewsHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="NewsHandler.ActiveMQ.Queue" value="NewsApiCall" />
    <add key="NewsHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="NewsHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="ReadAndReturnHandler.Type" value="Mock" />
    <add key="ReadAndReturnHandler.ActiveMQ.Uri" value="failover:(tcp://localhost:61616?wireFormat.MaxInactivityDuration=-1, tcp://localhost:61617?wireFormat.MaxInactivityDuration=-1)" />
    <add key="ReadAndReturnHandler.ActiveMQ.Queue" value="ReadAndReturnApiCall" />
    <add key="ReadAndReturnHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="ReadAndReturnHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="MessagePopupHandler.Type" value="Mock" />
    <add key="MessagePopupHandler.ActiveMQ.Uri" value="failover:(tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1, tcp://pkh-dev1-app15:61617?wireFormat.MaxInactivityDuration=-1)" />
    <add key="MessagePopupHandler.ActiveMQ.Queue" value="MessagePopupApiCall" />
    <add key="MessagePopupHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="MessagePopupHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="AccountInformationHandler.Type" value="Mock" />
    <add key="AccountInformationHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="AccountInformationHandler.ActiveMQ.Queue" value="AccountInformationApiCall" />
    <add key="AccountInformationHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="AccountInformationHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="MessageLookupHandler.Type" value="Mock" />
    <add key="MessageLookupHandler.ActiveMQ.Uri" value="failover:(tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1, tcp://pkh-dev1-app15:61617?wireFormat.MaxInactivityDuration=-1)" />
    <add key="MessageLookupHandler.ActiveMQ.Queue" value="MessageLookupApiCall" />
    <add key="MessageLookupHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="MessageLookupHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="WatchlistHandler.Type" value="Mock" />
    <add key="WatchlistHandler.ActiveMQ.Uri" value="failover:(tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1, tcp://pkh-dev1-app15:61617?wireFormat.MaxInactivityDuration=-1)" />
    <add key="WatchlistHandler.ActiveMQ.Queue" value="WatchlistApiCall" />
    <add key="WatchlistHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="WatchlistHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="FutureOptionHandler.Type" value="Mock" />
    <add key="FutureOptionHandler.ActiveMQ.Uri" value="failover:(tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1, tcp://pkh-dev1-app15:61617?wireFormat.MaxInactivityDuration=-1)" />
    <add key="FutureOptionHandler.ActiveMQ.Queue" value="FutureOptionApiCall" />
    <add key="FutureOptionHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="FutureOptionHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="TradeSimulationHandler.Type" value="ActiveMQ" />
    <add key="TradeSimulationHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="TradeSimulationHandler.ActiveMQ.Queue" value="SimulationIPApiCall" />
    <add key="TradeSimulationHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="TradeSimulationHandler.ActiveMQ.ResponseTimeout" value="30" />

    <add key="OrderSimulationHandler.Type" value="ActiveMQ" />
    <add key="OrderSimulationHandler.ActiveMQ.Uri" value="tcp://pkh-dev1-app15:61616?wireFormat.MaxInactivityDuration=-1" />
    <add key="OrderSimulationHandler.ActiveMQ.Queue" value="SimulationIPApiCall" />
    <add key="OrderSimulationHandler.ActiveMQ.TimeToLive" value="10" />
    <add key="OrderSimulationHandler.ActiveMQ.ResponseTimeout" value="30" />

  </appSettings>

</configuration>
